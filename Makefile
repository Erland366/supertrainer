help:  ## Show help
	@grep -E '^[.a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Clean autogenerated files
	rm -rf dist
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	rm -f .coverage

clean-logs: ## Clean logs
	rm -rf logs/**

format: ## Run pre-commit hooks
	pre-commit run -a

sync: ## Merge changes from main branch to your current branch
	git pull
	git pull origin main

test: ## Run not slow tests
	pytest -k "not slow"

test-full: ## Run all tests
	pytest

# Define variables with default values
CFG ?= job
ARGS ?=
train: ## Train model, arguments is CFG={, train, all, job}. By default CFG=job
	python src/supertrainer/main.py $(if $(filter-out train,$(CFG)),--cfg $(CFG)) $(ARGS)

dir_tree:
	find . | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"

dir_tree_configs:
	find configs/ | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"

dir_tree_supertrainer:
	find src/supertrainer/ | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"

export_conda_env: # export conda environment to environment.yaml
	bash ./scripts/export_conda_env.sh

CONDA_ENV ?= project
ENV_FILE ?= environment.yaml

install_conda_env: # install conda environment, pass CONDA_ENV=<env_name> and ENV_FILE=<file_name> to specify environment name and file
	bash ./scripts/install_conda_env.sh $(CONDA_ENV) $(ENV_FILE)

replace_name:
	@if [ -z "$(STRING1)" ] || [ -z "$(STRING2)" ]; then \
		echo "Error: Both STRING1 and STRING2 must be provided and non-empty."; \
		echo "Usage: make replace STRING1=<old_string> STRING2=<new_string>"; \
		exit 1; \
	fi
	@echo "Replacing '$(STRING1)' with '$(STRING2)' in filenames..."
	@find . -type f -name "*$(STRING1)*" | while read file; do \
		newname=$$(echo $$file | sed 's/$(STRING1)/$(STRING2)/g'); \
		if [ "$$file" != "$$newname" ]; then \
			mv "$$file" "$$newname"; \
			echo "Renamed: $$file -> $$newname"; \
		fi; \
	done
	@echo "Rename operation completed."
